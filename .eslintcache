[{"C:\\Users\\Punitha Kathirvel\\todo-app\\src\\index.js":"1","C:\\Users\\Punitha Kathirvel\\todo-app\\src\\App.js":"2","C:\\Users\\Punitha Kathirvel\\todo-app\\src\\reportWebVitals.js":"3"},{"size":450,"mtime":1607404399362,"results":"4","hashOfConfig":"5"},{"size":2701,"mtime":1607518449227,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1gau6wj",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Users\\Punitha Kathirvel\\todo-app\\src\\index.js",[],["16","17"],"C:\\Users\\Punitha Kathirvel\\todo-app\\src\\App.js",["18","19"],"import \"./App.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { todovalue: \"\", list: [] };\n\n    this.keyPress = this.keyPress.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.updateEvent = this.updateEvent.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ todovalue: e.target.value });\n  }\n\n  keyPress(e) {\n    if (e.keyCode === 13) {\n      this.handleSubmit();\n      e.preventDefault();\n    }\n  }\n\n  handleSubmit(e) {\n    if (this.state.todovalue === \"\") {\n      alert(\"Please fill out the field before adding the item!\");\n      e.preventDefault();\n    } else {\n      let todovalue = {\n        id: Math.random() + \"\",\n        value: this.state.todovalue,\n      };\n      let list = this.state.list;\n      // console.log(\"The todo id is: \"+todovalue.id);\n      list.push(todovalue);\n      this.setState({\n        list,\n        todovalue: \"\",\n      });\n    }\n  }\n\n  delete(id) {\n    let list = this.state.list;\n    let updatedList = list.filter((item) => item.id !== id);\n\n    this.setState({\n      list: updatedList,\n    });\n  }\n  updateEvent(text, key) {\n    let list = this.state.list;\n    let updated = list.map((item) => {\n      if (item.id === key) {\n        item.value = text.target.value;\n      }\n    });\n    this.setState({\n      list: updated,\n    });\n    console.log(this.state.list);\n  }\n  render() {\n    return (\n      <div className=\"content\">\n        <form>\n          <h1>A TODO App</h1>\n          <input\n            type=\"text\"\n            name=\"todovalue\"\n            placeholder=\"Enter your todo here!\"\n            value={this.state.todovalue}\n            onChange={this.handleChange}\n            onKeyDown={this.keyPress}\n          />\n          <button className=\"btn\" type=\"button\" onClick={this.handleSubmit}>\n            Add\n          </button>\n          <br />\n        </form>\n        <p>{JSON.stringify(this.state.list)}</p>\n        <div>\n          {this.state.list.map((item) => (\n            <p className=\"list\" key={item.id}>\n              <input type=\"checkbox\" name=\"checkbox\" />\n              <input\n                type=\"text\"\n                className=\"text\"\n                name=\"updte\"\n                value={item.value}\n                onChange={(e) => this.updateEvent(e, item.id)}\n              />\n              <span className=\"icon\">\n                <DeleteIcon onClick={() => this.delete(item.id)} />\n              </span>\n            </p>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n","C:\\Users\\Punitha Kathirvel\\todo-app\\src\\reportWebVitals.js",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":3,"column":8,"nodeType":"26","messageId":"27","endLine":3,"endColumn":16},{"ruleId":"28","severity":1,"message":"29","line":57,"column":35,"nodeType":"30","messageId":"31","endLine":57,"endColumn":37},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]